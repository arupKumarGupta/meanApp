{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/routes/routes.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/validate/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container mt-3\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { appRoutes } from './routes/routes';\nimport { ValidateService } from './services/validate/validate.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages'\nimport { AuthService } from './services/auth/auth.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  Hello! {{user.name}}, Welcome to your dashboard.\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  user: any;\n  constructor(private auth: AuthService, private router: Router, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n    this.auth.getDashboard().subscribe(data => {\n      this.user = data.user;\n    }, err => {\n      if (err.status == 401) {\n        this.flashMessage.show(\"Please login to continue.\", { cssClass: 'alert-info', timeout: 3000 });\n        this.router.navigate(['/login']);\n        return false;\n      }\n      console.log(err.status);\n      return false;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 text-center mt-3 mb-3\\\">\\n    <div class=\\\"card bg-dark\\\">\\n      <div class=\\\"card-body text-white\\\">\\n        <h1 class=\\\"card-title\\\">MEAN STACK APP</h1>\\n        <p class=\\\"card-text\\\">Custom Mean Stack Application.</p>\\n      </div>\\n      <div class=\\\"mb-2\\\" *ngIf=\\\"!auth.loggedIn()\\\">\\n        <a [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-primary mr-2\\\">Login</a>\\n        <a [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-success\\\">Register</a>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n<div style=\\\"margin-bottom: 30px;\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 \\\">\\n      <div class=\\\"card h-100 bg-dark\\\">\\n        <img height=\\\"180px\\\" src=\\\"https://i2.wp.com/blog.eduonix.com/wp-content/uploads/2015/11/Express-JS-101.png?fit=740%2C296&ssl=1\\\"\\n          alt=\\\"express\\\" class=\\\"card-img-top\\\">\\n        <div class=\\\"card-body\\\">\\n          <h3 class=\\\"card-title text-white\\\">Express Backend</h3>\\n          <p class=\\\"card-text  text-white\\\">Express.js, or simply Express, is a web application framework for Node.js, released as free and open-source software\\n            under the MIT License. It is designed for building web applications and APIs.</p>\\n          <a href=\\\"//expressjs.com\\\" class=\\\"btn btn-secondary\\\" target=\\\"_blank\\\">Learn more</a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card h-100 bg-danger\\\">\\n        <img height=\\\"180px\\\" src=\\\"https://cdn-images-1.medium.com/max/1600/1*ByAhY7BtpARVPzkgM6yV1Q.png\\\" alt=\\\"express\\\" class=\\\"card-img-top\\\">\\n        <div class=\\\"card-body\\\">\\n          <h3 class=\\\"card-title text-white\\\">Angular 6</h3>\\n          <p class=\\\"card-text text-white\\\">Angular is a TypeScript-based open-source front-end web application platform led by the Angular Team at Google\\n            and by a community of individuals and corporations. Angular is a complete rewrite from the same team that built\\n            AngularJS.\\n          </p>\\n          <a href=\\\"//expressjs.com\\\" class=\\\"btn btn-dark\\\" target=\\\"_blank\\\">Learn more</a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4 \\\">\\n      <div class=\\\"card h-100 bg-success\\\">\\n        <img height=\\\"180px\\\" src=\\\"https://webassets.mongodb.com/_com_assets/cms/mongodb-for-giant-ideas-bbab5c3cf8.png\\\" alt=\\\"express\\\"\\n          class=\\\"card-img-top\\\">\\n        <div class=\\\"card-body\\\">\\n          <h3 class=\\\"card-title text-white\\\">MongoDB</h3>\\n          <p class=\\\"card-text text-white\\\">MongoDB is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database\\n            program, MongoDB uses JSON-like documents with schemas</p>\\n          <a href=\\\"//expressjs.com\\\" class=\\\"btn btn-dark\\\" target=\\\"_blank\\\">Learn more</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-4 offset-md-4\\\">\\n  <div class=\\\"card bg-secondary h-100\\\">\\n    <div class=\\\"card-body text-white text-center\\\">\\n      <h2 class=\\\"card-title\\\">Login</h2>\\n      <div class=\\\"card-text\\\">\\n        <form class=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"text\\\" id=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"pwd\\\">Password</label>\\n\\n            <input type=\\\"password\\\" id=\\\"pwd\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\n          </div>\\n          <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"form-control btn btn-dark btn-block\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate/validate.service';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  errorOpts = { cssClass: 'alert-danger', timeout: 3000 };\n  email: String;\n  password: String;\n  constructor(private router: Router, private validator: ValidateService, private auth: AuthService, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n  onLoginSubmit() {\n    const creds = {\n      email: this.email,\n      password: this.password\n    }\n    if (!this.validator.validateLoginFields(creds)) {\n      this.flashMessage.show('Please fill out the fields to continue', this.errorOpts);\n      return false;\n    }\n    if (!this.validator.validateEmail(this.email)) {\n      this.flashMessage.show('Please provide a valid Email', this.errorOpts);\n      return false;\n    }\n    this.auth.loginUser(creds).subscribe((data) => {\n      console.log(data);\n      if (data.success) {\n        this.flashMessage.show(\"Welcome to Dashboard, \" + data.user.username, { cssClass: 'alert-success', timeout: 3000 });\n        this.auth.storUserDataToLocalStorage(data.token, data.user);\n        this.router.navigate(['/dashboard']);\n      }\n      else {\n        this.flashMessage.show(data.msg, this.errorOpts);\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\" [routerLink]=\\\"['/']\\\">Home\\n\\n      </a>\\n    </div>\\n    <div class=\\\"navbar-nav ml-auto\\\">\\n\\n      <a *ngIf=\\\"!auth.loggedIn()\\\" class=\\\"nav-item nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\n        [routerLink]=\\\"['/login']\\\">Login</a>\\n      <a *ngIf=\\\"!auth.loggedIn()\\\" class=\\\"nav-item nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\n        [routerLink]=\\\"['/register']\\\">Register</a>\\n\\n      <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"auth.loggedIn()\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n      <a *ngIf=\\\"auth.loggedIn()\\\" class=\\\"nav-item nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\n        [routerLink]=\\\"['/profile']\\\">Profile</a>\\n      <a *ngIf=\\\"auth.loggedIn()\\\" class=\\\"nav-item nav-link\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\"\\n        [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router, private auth: AuthService, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick() {\n    this.auth.doLogout();\n    this.flashMessage.show(\"You have been logged out successfully!\", { cssClass: 'alert-info', timeout: 3000 });\n    this.router.navigate(['/']);\n    return false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n  <div class=\\\"card h-100\\\">\\n    <div class=\\\"card-header\\\">\\n      <h2 class=\\\"card-title  text-center\\\">{{user.name}}</h2>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <ul class=\\\"card-text list-group\\\">\\n        <li class=\\\"list-group-item\\\">Name: {{user.name}}</li>\\n        <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n        <li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any;\n  constructor(private auth: AuthService, private router: Router, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n    this.auth.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    }, err => {\n      if (err.status == 401) {\n        this.flashMessage.show(\"Please login to continue.\", { cssClass: 'alert-info', timeout: 3000 });\n        this.router.navigate(['/login']);\n        return false;\n      }\n      console.log(err.status);\n      return false;\n    });\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-md-6 offset-md-3\\\">\\n  <div class=\\\"card h-100 bg-dark\\\">\\n    <div class=\\\"card-body text-white text-center\\\">\\n      <h2 class=\\\"card-title text-white\\\">Register</h2>\\n      <div class=\\\"card-text\\\">\\n        <form (submit)=\\\"onRegisterSubmit()\\\" class=\\\"form\\\">\\n          <div class=\\\"form-group  \\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"username\\\">Username</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" id=\\\"username\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group \\\">\\n            <input type=\\\"submit\\\" value=\\\"Register \\\" class=\\\"btn btn-outline-secondary btn-block\\\">\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  flashMessageErrorOps = { cssClass: 'alert-danger', timeout: 3000 };\n  flashMessageSuccessOps = { cssClass: 'alert-success', timeout: 3000 };\n  constructor(private router: Router,\n    private auth: AuthService, private validateService: ValidateService, private flashMessage: FlashMessagesService) { }\n\n  ngOnInit() {\n  }\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password\n    };\n    //required fields\n    if (!this.validateService.validateRegisterUser(user)) {\n      this.flashMessage.show(\"Required field error!\", this.flashMessageErrorOps);\n      return false;\n    }\n    //email validation\n    if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show(\"Invalid Email\", this.flashMessageErrorOps);\n      return false;\n    }\n    //register user\n    this.auth.registerUser(user).subscribe(data => {\n      console.log(data);\n      if (data.success) {\n        this.flashMessage.show(`Registration Successful.`, this.flashMessageSuccessOps);\n        this.router.navigate(['/login']);\n      }\n      else {\n        this.flashMessage.show('Unable to register.', this.flashMessageErrorOps);\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) { }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    const isLoggedIn = this.auth.loggedIn();\n    if (isLoggedIn)\n      return true;\n    this.router.navigate(['/login']);\n  }\n}\n","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from '../components/home/home.component';\r\nimport { RegisterComponent } from '../components/register/register.component';\r\nimport { LoginComponent } from '../components/login/login.component';\r\nimport { DashboardComponent } from '../components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from '../components/profile/profile.component';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n    { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\r\n\r\n];","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  authToken: any;\n  user: any;\n\n  constructor(private http: Http) { }\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, { headers }).pipe(map(res => res.json()));\n  }\n  loginUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/login', user, { headers }).pipe(map(res => res.json()));\n  }\n  storUserDataToLocalStorage(token, user) {\n    localStorage.setItem('id_token', token);\n    console.log(JSON.stringify(user));\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n  doLogout() {\n    console.log(this.user);\n    this.authToken = this.user = null;\n    localStorage.clear();\n\n  }\n  loadToken() {\n    this.authToken = localStorage.getItem('id_token');\n  }\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/users/profile', { headers }).pipe(map(res => res.json()));\n  }\n\n  getDashboard() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/users/dashboard', { headers }).pipe(map(res => res.json()));\n\n  }\n\n  loggedIn() {\n    if (this.authToken !== null)\n      return true;\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n  validateRegisterUser(user) {\n    if (user.name == undefined)\n      return false;\n    if (user.username == undefined)\n      return false;\n    if (user.email == undefined)\n      return false;\n    if (user.password == undefined)\n      return false;\n    return true;\n  }\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n  validateLoginFields(user) {\n    if (user.email == undefined)\n      return false;\n    if (user.password == undefined)\n      return false;\n    return true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}